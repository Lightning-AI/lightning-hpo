{
  "openapi": "3.0.2",
  "info": { "title": "FastAPI", "version": "0.1.0" },
  "paths": {
    "/api/v1/state": {
      "get": {
        "summary": "Get State",
        "operationId": "get_state_api_v1_state_get",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "X-Lightning-Type", "type": "string" },
            "name": "x-lightning-type",
            "in": "header"
          },
          {
            "required": false,
            "schema": { "title": "X-Lightning-Session-Uuid", "type": "string" },
            "name": "x-lightning-session-uuid",
            "in": "header"
          },
          {
            "required": false,
            "schema": { "title": "X-Lightning-Session-Id", "type": "string" },
            "name": "x-lightning-session-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      },
      "post": {
        "summary": "Post State",
        "operationId": "post_state_api_v1_state_post",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "X-Lightning-Type", "type": "string" },
            "name": "x-lightning-type",
            "in": "header"
          },
          {
            "required": false,
            "schema": { "title": "X-Lightning-Session-Uuid", "type": "string" },
            "name": "x-lightning-session-uuid",
            "in": "header"
          },
          {
            "required": false,
            "schema": { "title": "X-Lightning-Session-Id", "type": "string" },
            "name": "x-lightning-session-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/api/v1/spec": {
      "get": {
        "summary": "Get Spec",
        "operationId": "get_spec_api_v1_spec_get",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "X-Lightning-Session-Uuid", "type": "string" },
            "name": "x-lightning-session-uuid",
            "in": "header"
          },
          {
            "required": false,
            "schema": { "title": "X-Lightning-Session-Id", "type": "string" },
            "name": "x-lightning-session-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/api/v1/delta": {
      "post": {
        "summary": "Post Delta",
        "description": "This endpoint is used to make an update to the app state using delta diff, mainly used by streamlit to\nupdate the state.",
        "operationId": "post_delta_api_v1_delta_post",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "X-Lightning-Type", "type": "string" },
            "name": "x-lightning-type",
            "in": "header"
          },
          {
            "required": false,
            "schema": { "title": "X-Lightning-Session-Uuid", "type": "string" },
            "name": "x-lightning-session-uuid",
            "in": "header"
          },
          {
            "required": false,
            "schema": { "title": "X-Lightning-Session-Id", "type": "string" },
            "name": "x-lightning-session-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/api/v1/upload_file/{filename}": {
      "put": {
        "summary": "Upload File",
        "operationId": "upload_file_api_v1_upload_file__filename__put",
        "parameters": [
          { "required": true, "schema": { "title": "Filename", "type": "string" }, "name": "filename", "in": "path" }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": { "$ref": "#/components/schemas/Body_upload_file_api_v1_upload_file__filename__put" }
            }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "summary": "Healthz",
        "description": "Health check endpoint used in the cloud FastAPI servers to check the status periodically. This requires\nRedis to be installed for it to work.\n\n# TODO - Once the state store abstraction is in, check that too",
        "operationId": "healthz_healthz_get",
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } }
        }
      }
    },
    "/command/delete_sweep": {
      "post": {
        "tags": ["app_client_command"],
        "summary": "Delete Sweep",
        "operationId": "delete_sweep_command_delete_sweep_post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteSweepConfig" } } },
          "required": true
        },
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "cls_name": "DeleteSweepCommand",
        "cls_path": "/Users/thomas/Documents/GitHub/LAI-lightning-hpo-App/lightning_hpo/commands/sweep/delete.py"
      }
    },
    "/command/run_sweep": {
      "post": {
        "tags": ["app_client_command"],
        "summary": "Run Sweep",
        "operationId": "run_sweep_command_run_sweep_post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SweepConfig" } } },
          "required": true
        },
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "cls_name": "RunSweepCommand",
        "cls_path": "/Users/thomas/Documents/GitHub/LAI-lightning-hpo-App/lightning_hpo/commands/sweep/run.py"
      }
    },
    "/command/show_sweeps": {
      "post": {
        "tags": ["app_client_command"],
        "summary": "Show Sweeps",
        "operationId": "show_sweeps_command_show_sweeps_post",
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } }
        },
        "cls_name": "ShowSweepsCommand",
        "cls_path": "/Users/thomas/Documents/GitHub/LAI-lightning-hpo-App/lightning_hpo/commands/sweep/show.py"
      }
    },
    "/command/stop_sweep": {
      "post": {
        "tags": ["app_client_command"],
        "summary": "Stop Sweep",
        "operationId": "stop_sweep_command_stop_sweep_post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StopSweepConfig" } } },
          "required": true
        },
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "cls_name": "StopSweepCommand",
        "cls_path": "/Users/thomas/Documents/GitHub/LAI-lightning-hpo-App/lightning_hpo/commands/sweep/stop.py"
      }
    },
    "/command/run_experiment": {
      "post": {
        "tags": ["app_client_command"],
        "summary": "Run Experiment",
        "operationId": "run_experiment_command_run_experiment_post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SweepConfig" } } },
          "required": true
        },
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "cls_name": "RunExperimentCommand",
        "cls_path": "/Users/thomas/Documents/GitHub/LAI-lightning-hpo-App/lightning_hpo/commands/experiment/run.py"
      }
    },
    "/command/stop_experiment": {
      "post": {
        "tags": ["app_client_command"],
        "summary": "Stop Experiment",
        "operationId": "stop_experiment_command_stop_experiment_post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StopExperimentConfig" } } },
          "required": true
        },
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "cls_name": "StopExperimentCommand",
        "cls_path": "/Users/thomas/Documents/GitHub/LAI-lightning-hpo-App/lightning_hpo/commands/experiment/stop.py"
      }
    },
    "/command/show_experiments": {
      "post": {
        "tags": ["app_client_command"],
        "summary": "Show Experiments",
        "operationId": "show_experiments_command_show_experiments_post",
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } }
        },
        "cls_name": "ShowExperimentsCommand",
        "cls_path": "/Users/thomas/Documents/GitHub/LAI-lightning-hpo-App/lightning_hpo/commands/experiment/show.py"
      }
    },
    "/command/run_notebook": {
      "post": {
        "tags": ["app_client_command"],
        "summary": "Run Notebook",
        "operationId": "run_notebook_command_run_notebook_post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotebookConfig" } } },
          "required": true
        },
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "cls_name": "RunNotebookCommand",
        "cls_path": "/Users/thomas/Documents/GitHub/LAI-lightning-hpo-App/lightning_hpo/commands/notebook/run.py"
      }
    },
    "/command/stop_notebook": {
      "post": {
        "tags": ["app_client_command"],
        "summary": "Stop Notebook",
        "operationId": "stop_notebook_command_stop_notebook_post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StopNotebookConfig" } } },
          "required": true
        },
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "cls_name": "StopNotebookCommand",
        "cls_path": "/Users/thomas/Documents/GitHub/LAI-lightning-hpo-App/lightning_hpo/commands/notebook/stop.py"
      }
    },
    "/command/show_notebooks": {
      "post": {
        "tags": ["app_client_command"],
        "summary": "Show Notebooks",
        "operationId": "show_notebooks_command_show_notebooks_post",
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } }
        },
        "cls_name": "ShowNotebookCommand",
        "cls_path": "/Users/thomas/Documents/GitHub/LAI-lightning-hpo-App/lightning_hpo/commands/notebook/show.py"
      }
    },
    "/command/run_tensorboard": {
      "post": {
        "tags": ["app_command"],
        "summary": "Run Tensorboard",
        "operationId": "run_tensorboard_command_run_tensorboard_post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TensorboardConfig" } } },
          "required": true
        },
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/command/show_tensorboards": {
      "post": {
        "tags": ["app_command"],
        "summary": "Show Tensorboards",
        "operationId": "show_tensorboards_command_show_tensorboards_post",
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } }
        }
      }
    },
    "/command/stop_tensorboard": {
      "post": {
        "tags": ["app_command"],
        "summary": "Stop Tensorboard",
        "operationId": "stop_tensorboard_command_stop_tensorboard_post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StopTensorboardConfig" } } },
          "required": true
        },
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/command/show_artifacts": {
      "post": {
        "tags": ["app_client_command"],
        "summary": "Show Artifacts",
        "operationId": "show_artifacts_command_show_artifacts_post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ShowArtifactsConfig" } } },
          "required": true
        },
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "cls_name": "ShowArtifactsCommand",
        "cls_path": "/Users/thomas/Documents/GitHub/LAI-lightning-hpo-App/lightning_hpo/commands/artifacts/show.py"
      }
    },
    "/command/download_artifacts": {
      "post": {
        "tags": ["app_client_command"],
        "summary": "Download Artifacts",
        "operationId": "download_artifacts_command_download_artifacts_post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DownloadArtifactsConfig" } } },
          "required": true
        },
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "cls_name": "DownloadArtifactsCommand",
        "cls_path": "/Users/thomas/Documents/GitHub/LAI-lightning-hpo-App/lightning_hpo/commands/artifacts/download.py"
      }
    },
    "/command/create_drive": {
      "post": {
        "tags": ["app_client_command"],
        "summary": "Create Drive",
        "operationId": "create_drive_command_create_drive_post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DriveConfig" } } },
          "required": true
        },
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "cls_name": "CreateDriveCommand",
        "cls_path": "/Users/thomas/Documents/GitHub/LAI-lightning-hpo-App/lightning_hpo/commands/drive/create.py"
      }
    },
    "/command/delete_drive": {
      "post": {
        "tags": ["app_client_command"],
        "summary": "Delete Drive",
        "operationId": "delete_drive_command_delete_drive_post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteDriveConfig" } } },
          "required": true
        },
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "cls_name": "DeleteDriveCommand",
        "cls_path": "/Users/thomas/Documents/GitHub/LAI-lightning-hpo-App/lightning_hpo/commands/drive/delete.py"
      }
    },
    "/command/show_drives": {
      "post": {
        "tags": ["app_client_command"],
        "summary": "Show Drives",
        "operationId": "show_drives_command_show_drives_post",
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } }
        },
        "cls_name": "ShowDriveCommand",
        "cls_path": "/Users/thomas/Documents/GitHub/LAI-lightning-hpo-App/lightning_hpo/commands/drive/show.py"
      }
    },
    "/api{full_path}": {
      "get": {
        "summary": "Api Catch All",
        "operationId": "api_catch_all_api_full_path__get",
        "parameters": [
          { "required": true, "schema": { "title": "Full Path", "type": "string" }, "name": "full_path", "in": "path" }
        ],
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/{full_path}": {
      "get": {
        "summary": "Frontend Route",
        "operationId": "frontend_route__full_path__get",
        "parameters": [
          { "required": true, "schema": { "title": "Full Path", "type": "string" }, "name": "full_path", "in": "path" }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "text/html": { "schema": { "type": "string" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_upload_file_api_v1_upload_file__filename__put": {
        "title": "Body_upload_file_api_v1_upload_file__filename__put",
        "required": ["uploaded_file"],
        "type": "object",
        "properties": { "uploaded_file": { "title": "Uploaded File", "type": "string", "format": "binary" } }
      },
      "DeleteDriveConfig": {
        "title": "DeleteDriveConfig",
        "required": ["name"],
        "type": "object",
        "properties": { "name": { "title": "Name", "type": "string" } }
      },
      "DeleteSweepConfig": {
        "title": "DeleteSweepConfig",
        "required": ["sweep_id"],
        "type": "object",
        "properties": { "sweep_id": { "title": "Sweep Id", "type": "string" } }
      },
      "Distributions": {
        "title": "Distributions",
        "required": ["distribution", "params"],
        "type": "object",
        "properties": {
          "distribution": { "title": "Distribution", "type": "string" },
          "params": {
            "title": "Params",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                { "type": "number" },
                { "type": "integer" },
                { "type": "string" },
                { "type": "array", "items": { "type": "number" } },
                { "type": "array", "items": { "type": "string" } }
              ]
            }
          }
        }
      },
      "DownloadArtifactsConfig": {
        "title": "DownloadArtifactsConfig",
        "type": "object",
        "properties": {
          "include": { "title": "Include", "type": "string" },
          "exclude": { "title": "Exclude", "type": "string" }
        }
      },
      "DriveConfig": {
        "title": "DriveConfig",
        "required": ["name", "source", "mount_path"],
        "type": "object",
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "source": { "title": "Source", "type": "string" },
          "mount_path": { "title": "Mount Path", "type": "string" }
        }
      },
      "ExperimentConfig": {
        "title": "ExperimentConfig",
        "required": ["name", "params"],
        "type": "object",
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "best_model_score": { "title": "Best Model Score", "type": "number" },
          "monitor": { "title": "Monitor", "type": "string" },
          "best_model_path": { "title": "Best Model Path", "type": "string" },
          "stage": { "title": "Stage", "type": "string", "default": "not_started" },
          "params": {
            "title": "Params",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                { "type": "number" },
                { "type": "integer" },
                { "type": "string" },
                { "type": "array", "items": { "type": "number" } },
                { "type": "array", "items": { "type": "string" } }
              ]
            }
          },
          "exception": { "title": "Exception", "type": "string" },
          "progress": { "title": "Progress", "type": "number" },
          "total_parameters": { "title": "Total Parameters", "type": "string" },
          "start_time": { "title": "Start Time", "type": "string" },
          "end_time": { "title": "End Time", "type": "string" }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": { "title": "Detail", "type": "array", "items": { "$ref": "#/components/schemas/ValidationError" } }
        }
      },
      "NotebookConfig": {
        "title": "NotebookConfig",
        "required": ["notebook_name", "requirements", "cloud_compute"],
        "type": "object",
        "properties": {
          "notebook_name": { "title": "Notebook Name", "type": "string" },
          "requirements": { "title": "Requirements", "type": "array", "items": { "type": "string" } },
          "cloud_compute": { "title": "Cloud Compute", "type": "string" },
          "stage": { "title": "Stage", "type": "string", "default": "not_started" },
          "desired_stage": { "title": "Desired Stage", "type": "string", "default": "running" },
          "url": { "title": "Url", "type": "string", "default": "" },
          "start_time": { "title": "Start Time", "type": "number", "default": -1 }
        }
      },
      "ShowArtifactsConfig": {
        "title": "ShowArtifactsConfig",
        "type": "object",
        "properties": {
          "include": { "title": "Include", "type": "string" },
          "exclude": { "title": "Exclude", "type": "string" }
        }
      },
      "StopExperimentConfig": {
        "title": "StopExperimentConfig",
        "required": ["name"],
        "type": "object",
        "properties": { "name": { "title": "Name", "type": "string" } }
      },
      "StopNotebookConfig": {
        "title": "StopNotebookConfig",
        "required": ["notebook_name"],
        "type": "object",
        "properties": { "notebook_name": { "title": "Notebook Name", "type": "string" } }
      },
      "StopSweepConfig": {
        "title": "StopSweepConfig",
        "required": ["sweep_id"],
        "type": "object",
        "properties": { "sweep_id": { "title": "Sweep Id", "type": "string" } }
      },
      "StopTensorboardConfig": {
        "title": "StopTensorboardConfig",
        "required": ["sweep_id"],
        "type": "object",
        "properties": { "sweep_id": { "title": "Sweep Id", "type": "string" } }
      },
      "SweepConfig": {
        "title": "SweepConfig",
        "required": [
          "sweep_id",
          "script_path",
          "total_experiments",
          "parallel_experiments",
          "requirements",
          "script_args",
          "algorithm",
          "distributions",
          "experiments",
          "framework",
          "logger",
          "direction"
        ],
        "type": "object",
        "properties": {
          "sweep_id": { "title": "Sweep Id", "type": "string" },
          "script_path": { "title": "Script Path", "type": "string" },
          "total_experiments": { "title": "Total Experiments", "type": "integer" },
          "parallel_experiments": { "title": "Parallel Experiments", "type": "integer" },
          "total_experiments_done": { "title": "Total Experiments Done", "type": "integer", "default": 0 },
          "requirements": { "title": "Requirements", "type": "array", "items": { "type": "string" } },
          "script_args": { "title": "Script Args", "type": "array", "items": { "type": "string" } },
          "algorithm": { "title": "Algorithm", "type": "string" },
          "distributions": {
            "title": "Distributions",
            "type": "object",
            "additionalProperties": { "$ref": "#/components/schemas/Distributions" }
          },
          "logger_url": { "title": "Logger Url", "type": "string", "default": "" },
          "experiments": {
            "title": "Experiments",
            "type": "object",
            "additionalProperties": { "$ref": "#/components/schemas/ExperimentConfig" }
          },
          "framework": { "title": "Framework", "type": "string" },
          "cloud_compute": { "title": "Cloud Compute", "type": "string", "default": "cpu" },
          "num_nodes": { "title": "Num Nodes", "type": "integer", "default": 1 },
          "logger": { "title": "Logger", "type": "string" },
          "direction": { "title": "Direction", "type": "string" },
          "stage": { "title": "Stage", "type": "string", "default": "not_started" },
          "desired_stage": { "title": "Desired Stage", "type": "string", "default": "running" },
          "disk_size": { "title": "Disk Size", "type": "integer", "default": 80 }
        }
      },
      "TensorboardConfig": {
        "title": "TensorboardConfig",
        "required": ["sweep_id", "shared_folder"],
        "type": "object",
        "properties": {
          "id": { "title": "Id", "type": "integer" },
          "sweep_id": { "title": "Sweep Id", "type": "string" },
          "shared_folder": { "title": "Shared Folder", "type": "string" },
          "stage": { "title": "Stage", "type": "string", "default": "not_started" },
          "desired_stage": { "title": "Desired Stage", "type": "string", "default": "running" },
          "url": { "title": "Url", "type": "string", "default": "" }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": ["loc", "msg", "type"],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] }
          },
          "msg": { "title": "Message", "type": "string" },
          "type": { "title": "Error Type", "type": "string" }
        }
      }
    }
  }
}
